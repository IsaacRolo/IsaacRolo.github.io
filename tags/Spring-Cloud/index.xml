<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring Cloud on Rolo的日常</title>
    <link>https://https://isaacrolo.github.io/tags/Spring-Cloud/</link>
    <description>Recent content in Spring Cloud on Rolo的日常</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 20 Mar 2019 13:46:10 +0800</lastBuildDate><atom:link href="https://https://isaacrolo.github.io/tags/Spring-Cloud/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>整合Zuul</title>
      <link>https://https://isaacrolo.github.io/post/zuul/</link>
      <pubDate>Wed, 20 Mar 2019 13:46:10 +0800</pubDate>
      
      <guid>https://https://isaacrolo.github.io/post/zuul/</guid>
      <description>场景：仅作为web服务集群与外界请求之间的网关，和Nginx结合使用 Zuul的使用 添加依赖 1 2 3 4 5 6 7 8 9 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-starter-zuul&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-starter-eureka&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; 配置文件 将Zuul注册到eureka server上，实现对serviceId的映射 1 2 3 4 5 6 7 8 9 10 11 12 13 14 server:port:8032spring:application:name:microservice-zuuleureka:client:service-url:defaultZone:http://localhost:8761/eurekazuul:routes:web:path:/web/**serviceId:microservice-web 启动类 1 @EnableZuulProxy 访问http://localhos</description>
    </item>
    
    <item>
      <title>整合HystrixDashboard和Turbine</title>
      <link>https://https://isaacrolo.github.io/post/HystrixDashboard/</link>
      <pubDate>Tue, 19 Mar 2019 11:32:32 +0800</pubDate>
      
      <guid>https://https://isaacrolo.github.io/post/HystrixDashboard/</guid>
      <description>前提：springboot 1.5.19.RELEASE springcloud Edgware.SR5 场景：服务调用方使用Feign+Hystrix实现微服务之间的通信；新建一个Hystrix Dashboard微服务来实现Hystrix的实时监控 Hystrix Dashboard服务 实时监控Hystrix ，可以直观的查看各Hystrix Command的请求响应时</description>
    </item>
    
  </channel>
</rss>
